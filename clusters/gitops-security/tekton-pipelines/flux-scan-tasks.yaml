---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: checkov-scan
  namespace: tekton-pipelines
spec:
  params:
    - name: repository
      type: string
    - name: revision
      type: string
    - name: namespace
      type: string
  steps:
    - name: echo
      image: ubuntu
      script: |
        #!/bin/sh
        apt-get update
        apt-get -y install curl git python3 python3-pip
        pip3 install checkov
        curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl
        chmod +x ./kubectl
        mv ./kubectl /bin/kubectl
        mkdir -p ~/.ssh
        export SECRET_NAME=$(kubectl get GitRepository $(params.repository) -n $(params.namespace) -o jsonpath='{.spec.secretRef.name}')
        export GIT_URL=$(kubectl get GitRepository $(params.repository) -n $(params.namespace) -o jsonpath='{.spec.url}')
        kubectl get secret $SECRET_NAME -n $(params.namespace) -o jsonpath='{.data.identity}' | base64 --decode > ~/.ssh/id_rsa
        chmod 0400 ~/.ssh/id_rsa
        kubectl get secret $SECRET_NAME -n $(params.namespace) -o jsonpath='{.data.identity\.pub}' | base64 --decode > ~/.ssh/id_rsa.pub
        kubectl get secret $SECRET_NAME -n $(params.namespace) -o jsonpath='{.data.known_hosts}' | base64 --decode > ~/.ssh/known_hosts
        git clone $GIT_URL ~/repo
        cd ~/repo
        git fetch
        git checkout $(echo "$(params.revision)" | cut -d "/" -f 2)
        checkov --directory ~/repo
...
